// This file would be auto-generated by `supabase gen types typescript`
// For this exercise, we'll define it manually.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      appointments: {
        Row: {
          id: string
          client_id: string
          procedure: "Consultation" | "Check-up" | "Surgery" | "Follow-up"
          start_time: string
          end_time: string
          notes: string | null
          status: "Confirmed" | "Completed" | "Cancelled" | "No-Show"
          created_at: string
        }
        Insert: {
          id?: string
          client_id: string
          procedure: "Consultation" | "Check-up" | "Surgery" | "Follow-up"
          start_time: string
          end_time: string
          notes?: string | null
          status?: "Confirmed" | "Completed" | "Cancelled" | "No-Show"
          created_at?: string
        }
        Update: {
          id?: string
          client_id?: string
          procedure?: "Consultation" | "Check-up" | "Surgery" | "Follow-up"
          start_time?: string
          end_time?: string
          notes?: string | null
          status?: "Confirmed" | "Completed" | "Cancelled" | "No-Show"
          created_at?: string
        }
      }
      clients: {
        Row: {
          id: string
          name: string
          email: string
          phone: string | null
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          email: string
          phone?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          email?: string
          phone?: string | null
          created_at?: string
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
